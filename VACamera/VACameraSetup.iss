; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "VACamera"
#define MyAppVersion "2.2"
#define MyAppPublisher "My Company, Inc."
#define MyAppURL "http://www.example.com/"
#define MyAppExeName "VACamera.exe"
#define TimeStamp GetDateTimeString('ddmm_hhnn', '-', ':')

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{BE50F95B-60D5-41BA-8A39-7212E0FD3689}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
PrivilegesRequired=lowest
OutputBaseFilename={#MyAppName}_{#MyAppVersion}_Setup_{#TimeStamp}
SetupIconFile=webcam.ico
Password=123456
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Registry]
Root: HKCU; Subkey: "SOFTWARE\VACamera"; Flags: uninsdeletekey
Root: HKCU; Subkey: "SOFTWARE\VACamera\Settings"; ValueType: string; ValueName: "Name"; ValueData: "{code:GetUser|Name}"
Root: HKCU; Subkey: "SOFTWARE\VACamera\Settings"; ValueType: string; ValueName: "Company"; ValueData: "{code:GetUser|Company}"

[Code]
var
  UserPage: TInputQueryWizardPage;

procedure InitializeWizard;
begin
  { Create the pages }
  UserPage := CreateInputQueryPage(wpWelcome,
    'Registration Infomation', 'This software is protected by a license',
    'Fill in your registration information below:');
  UserPage.Add('Name:', False);
  UserPage.Add('Company:', False);
  UserPage.Values[0] := ExpandConstant('{sysuserinfoname}');
  UserPage.Values[1] := ExpandConstant('{sysuserinfoorg}');
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  { Validate certain pages before allowing the user to proceed }
  if CurPageID = UserPage.ID then begin
    if UserPage.Values[0] = '' then begin
      MsgBox('You must enter your name.', mbError, MB_OK);
      Result := False;
    end else if UserPage.Values[1] = '' then begin
      MsgBox('You must enter your company name.', mbError, MB_OK);
      Result := False;
    end else
      Result := True;
  end else
    Result := True;
end;

function GetUser(Param: String): String;
begin
  { Return a user value }
  { Could also be split into separate GetUserName and GetUserCompany functions }
  if Param = 'Name' then begin
    Result := UserPage.Values[0];
  end else if Param = 'Company' then begin
    Result := UserPage.Values[1];
  end;
end;

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "bin\Release\Accord.Audio.DirectSound.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.Audio.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.Audition.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.Math.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.Math.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.Video.DirectShow.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Accord.Video.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\SharpDX.DirectSound.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\SharpDX.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\VACamera.application"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\VACamera.exe.manifest"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\VACamera.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\ffmpeg.exe"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

